{"sample_order": 393, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    result = np.zeros_like(input_data)\n    \n    for i in range(len(input_data)):\n        if input_data[i] < thresholds[0]:\n            result[i] = input_data[i] + 0.2\n        elif thresholds[0] <= input_data[i] < thresholds[1]:\n            result[i] = input_data[i] - 0.1\n        elif thresholds[1] <= input_data[i] < thresholds[2]:\n            result[i] = input_data[i] * 1.5\n        else:\n            result[i] = 0.5 * input_data[i]\n        \n        for j in range(3):\n            if j % 2 == 0:\n                result[i] += 0.1\n            else:\n                result[i] -= 0.05\n    \n    return result\n\n", "score": null}