{"sample_order": 338, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    output_array = np.zeros_like(input_array)\n    \n    for i in range(len(input_array)):\n        if input_array[i] % 2 == 0:\n            output_array[i] = input_array[i] / 2\n        else:\n            output_array[i] = input_array[i] * 2\n        \n        if input_array[i] > 10:\n            output_array[i] += 5\n        elif input_array[i] < 5:\n            output_array[i] -= 3\n        \n        if i % 2 == 0:\n            output_array[i] *= 1.5\n        else:\n            output_array[i] /= 1.5\n            \n    return output_array\n\n", "score": null}