{"sample_order": 700, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    ratios = item / bins\n    priorities = np.zeros_like(bins)\n    \n    for i in range(len(bins)):\n        if ratios[i] < 0.2:\n            priorities[i] = np.power(np.sin(item) + np.cos(bins[i]), 2)\n        elif 0.2 <= ratios[i] < 0.6:\n            priorities[i] = np.tan(item) + np.tan(bins[i])\n        else:\n            priorities[i] = np.log(np.abs(item - bins[i]) + 1)\n        \n        if priorities[i] < 5:\n            priorities[i] = np.sqrt(priorities[i])\n        elif priorities[i] >= 5 and priorities[i] < 10:\n            priorities[i] = np.cbrt(priorities[i])\n    \n    for j in range(len(bins)):\n        if priorities[j] % 2 == 0:\n            priorities[j] -= item / 2\n        else:\n            priorities[j] += item * 1.5\n        \n        if item > 5:\n            priorities[j] *= 2\n        else:\n            priorities[j] = np.exp(priorities[j])\n    \n    return priorities\n\n", "score": -2116.0}