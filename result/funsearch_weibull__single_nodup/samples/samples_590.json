{"sample_order": 590, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    output_data = np.zeros_like(input_data)\n    \n    for i in range(len(input_data)):\n        if input_data[i] < 0:\n            output_data[i] = 0\n        elif input_data[i] >= 0 and input_data[i] < 5:\n            output_data[i] = input_data[i] * 2\n        elif input_data[i] >= 5 and input_data[i] < 10:\n            output_data[i] = input_data[i] * 3\n        else:\n            output_data[i] = input_data[i] * 5\n            \n    for i in range(1, len(output_data)):\n        if output_data[i] % 2 == 0:\n            output_data[i] = output_data[i] + i\n        else:\n            output_data[i] = output_data[i] - i\n    \n    return output_data\n\n", "score": null}