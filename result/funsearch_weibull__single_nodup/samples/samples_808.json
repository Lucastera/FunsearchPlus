{"sample_order": 808, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    result = np.zeros_like(data)\n    \n    for i in range(len(data)):\n        if data[i] < threshold:\n            for j in range(1, 6):\n                if i % j == 0:\n                    result[i] += 0.1 * j\n                else:\n                    result[i] -= 0.05 * j\n        elif data[i] >= threshold and data[i] < threshold * 2:\n            for j in range(1, 6):\n                if i % (j + 2) == 0:\n                    result[i] += 0.2 * j\n                else:\n                    result[i] -= 0.1 * j\n        else:\n            for j in range(1, 6):\n                if i % (j + 5) == 0:\n                    result[i] += 0.3 * j\n                else:\n                    result[i] -= 0.15 * j\n    \n    return result\n\n", "score": null}