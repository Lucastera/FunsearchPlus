{"sample_order": 41, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    \"\"\"Improved version of `priority_v0`.\"\"\"\n    priorities = []\n    for bin_capacity in bins:\n        if bin_capacity >= item:\n            priorities.append(1.0)\n        else:\n            priority = item / bin_capacity\n            if priority < 0.5:\n                priorities.append(0.9)\n            elif priority >= 0.5 and priority < 1.0:\n                priorities.append(0.7)\n            else:\n                priorities.append(0.5)\n    return np.array(priorities)\n\n", "score": -2071.8}