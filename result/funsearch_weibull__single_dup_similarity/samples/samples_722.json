{"sample_order": 722, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    output_data = np.zeros_like(input_data)\n\n    for i in range(len(input_data)):\n        if input_data[i] % 2 == 0:\n            output_data[i] = input_data[i] ** 2\n        else:\n            output_data[i] = input_data[i] * 3\n\n    temp_sum = 0\n    for j in range(len(output_data)):\n        if j % 2 == 0:\n            temp_sum += output_data[j]\n\n    for k in range(len(output_data)):\n        if output_data[k] > temp_sum:\n            output_data[k] -= temp_sum\n        else:\n            output_data[k] += temp_sum\n\n    return output_data\n\n", "score": null}