{"sample_order": 262, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    priorities = np.zeros(len(bins))\n\n    for i in range(len(bins)):\n        if item > 20:\n            priorities[i] = 7\n        elif bins[i] < 1:\n            priorities[i] = 0\n        else:\n            remaining_space = bins[i] - item\n            if remaining_space > 10:\n                priorities[i] = 5\n            elif remaining_space >= 5:\n                priorities[i] = 4\n            elif remaining_space >= 3:\n                priorities[i] = 3\n            elif remaining_space >= 1:\n                priorities[i] = 2\n            else:\n                priorities[i] = 1\n\n    return priorities\n\n", "score": -2153.2}