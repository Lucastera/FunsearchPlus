{"sample_order": 685, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    ratios = item / bins\n    priorities = []\n\n    for i in range(len(ratios)):\n        ratio = ratios[i]\n        if ratio < 0.2:\n            priority = np.sin(5*ratio) + np.cos(3*ratio) - np.tan(1.5*ratio)\n            priorities.append(priority)\n        else:\n            priority = np.exp(np.log(ratio)) * np.sqrt(ratio) - np.square(ratio)\n            priorities.append(priority)\n\n    return np.array(priorities)\n\n", "score": -2600.8}