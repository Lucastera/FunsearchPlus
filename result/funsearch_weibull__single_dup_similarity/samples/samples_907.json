{"sample_order": 907, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    priorities = []\n    \n    for bin_capacity in bins:\n        if bin_capacity < item:\n            priority = -1\n        else:\n            if bin_capacity % item == 0:\n                priority = 2 / (bin_capacity - item + 1)\n            elif bin_capacity % item == 1:\n                priority = 1 / (bin_capacity - item + 2)\n            else:\n                priority = 1 / (bin_capacity - item + 3)\n        priorities.append(priority)\n    \n    return np.array(priorities)\n\n", "score": -2066.6}