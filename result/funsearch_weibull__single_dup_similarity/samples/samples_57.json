{"sample_order": 57, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    ratios = item / bins\n    priorities = np.zeros(len(bins))\n    \n    for i in range(len(bins)):\n        if ratios[i] >= 0.8:\n            if item > 10 and bins[i] > 5:\n                priorities[i] = 4\n            elif item > 8 and item % 2 == 0:\n                priorities[i] = 3\n            else:\n                priorities[i] = 2\n        elif ratios[i] >= 0.5:\n            if item < 5:\n                priorities[i] = 1\n            elif bins[i] > 10:\n                priorities[i] = 3\n            else:\n                priorities[i] = 2\n        else:\n            if bins[i] < 2:\n                priorities[i] = 0\n            elif item % 3 == 0:\n                priorities[i] = 2\n            else:\n                priorities[i] = 1\n    \n    return priorities\n\n", "score": -2069.2}