{"sample_order": 621, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    result = np.zeros_like(data)\n    \n    for i in range(len(data)):\n        if data[i] < thresholds[0]:\n            result[i] = data[i] * 2\n        elif thresholds[0] <= data[i] < thresholds[1]:\n            result[i] = data[i] ** 2\n        elif thresholds[1] <= data[i] < thresholds[2]:\n            result[i] = data[i] + thresholds[1]\n        else:\n            temp = data[i]\n            for j in range(2, len(thresholds)):\n                temp = temp * thresholds[j]\n            result[i] = temp\n    \n    return result\n\n", "score": null}