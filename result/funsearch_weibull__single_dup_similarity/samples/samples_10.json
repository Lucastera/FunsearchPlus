{"sample_order": 10, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    priorities = np.zeros_like(bins)\n    \n    for i in range(len(bins)):\n        if item <= bins[i]:\n            priorities[i] = 1 / (bins[i] - item + 1)\n        else:\n            priorities[i] = -1 / (item - bins[i] + 1)\n            \n        if bins[i] < 0:\n            priorities[i] = 0\n    \n    return priorities\n\n", "score": -2069.2}