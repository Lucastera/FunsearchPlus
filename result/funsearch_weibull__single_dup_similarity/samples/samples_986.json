{"sample_order": 986, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    num_samples = data.shape[0]\n    sim_matrix = np.zeros((num_samples, num_samples))\n\n    for i in range(num_samples):\n        for j in range(num_samples):\n            if i == j:\n                sim_matrix[i, j] = 1.0\n            elif i < j:\n                vec1 = data[i]\n                vec2 = data[j]\n                sim_score = 0\n                \n                for k in range(len(vec1)):\n                    if vec1[k] == vec2[k]:\n                        sim_score += 1\n                \n                sim_matrix[i, j] = sim_score / len(vec1)\n                sim_matrix[j, i] = sim_score / len(vec1)\n\n    return sim_matrix\n\n", "score": null}