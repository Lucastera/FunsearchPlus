{"sample_order": 519, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    fibonacci_sequence = []\n    \n    if n <= 0:\n        return fibonacci_sequence\n    \n    if n == 1:\n        fibonacci_sequence.append(0)\n        return fibonacci_sequence\n    \n    fibonacci_sequence = [0, 1]\n    \n    for i in range(2, n):\n        next_number = fibonacci_sequence[-1] + fibonacci_sequence[-2]\n        fibonacci_sequence.append(next_number)\n    \n    return fibonacci_sequence\n\n", "score": null}