{"sample_order": 729, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    priorities = np.zeros(len(bins))\n    \n    for i in range(len(bins)):\n        if item > 10 and bins[i] > 5:\n            priorities[i] = 6\n        elif item > 8 and bins[i] > 4:\n            priorities[i] = 5\n        elif item > 5 and bins[i] > 3:\n            priorities[i] = 4\n        elif item > 2 and bins[i] > 1:\n            priorities[i] = 3\n        elif bins[i] >= 1:\n            priorities[i] = 2\n        else:\n            priorities[i] = 1\n    \n    return priorities\n\n", "score": -2071.8}