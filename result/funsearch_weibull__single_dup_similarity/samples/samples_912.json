{"sample_order": 912, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    result = []\n\n    def backtrack(remaining_list, path):\n        if sum(path) == target:\n            result.append(path)\n            return\n        if sum(path) > target:\n            return\n\n        for i in range(len(remaining_list)):\n            new_path = path + [remaining_list[i]]\n            new_remaining_list = remaining_list[i+1:] \n            backtrack(new_remaining_list, new_path)\n\n    backtrack(input_list, [])\n    return result\n\n", "score": null}