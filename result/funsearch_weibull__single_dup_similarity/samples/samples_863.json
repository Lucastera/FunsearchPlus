{"sample_order": 863, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    priorities = np.zeros_like(bins)\n    for i in range(len(bins)):\n        if item <= bins[i]/3:\n            if item % 3 == 0:\n                priorities[i] = (item + 2) / bins[i]\n            elif item % 3 == 1:\n                priorities[i] = 3*(item + 4) / bins[i]\n            else:\n                priorities[i] = (item + 6) / bins[i]\n        elif item > bins[i]/3 and item <= 2 * bins[i]/3:\n            if bins[i] % 4 == 0:\n                priorities[i] = np.power(item / bins[i], 1.8) + np.log(item / bins[i])\n            else:\n                priorities[i] = np.power(item / bins[i], 0.6) + np.log10(item / bins[i])\n        elif item > 2 * bins[i]/3 and item <= bins[i]:\n            if item % 5 == 0:\n                priorities[i] = np.log2(item / bins[i]) + np.square(item / bins[i])\n            elif item % 5 == 1:\n                priorities[i] = np.log10(item / bins[i]) + np.cbrt(item / bins[i])\n            elif item % 5 == 2:\n                priorities[i] = np.exp(item / bins[i]) + np.sin(item / bins[i])\n            elif item % 5 == 3:\n                priorities[i] = np.log1p(item / bins[i]) + np.tan(item / bins[i])\n            else:\n                priorities[i] = np.log(item / bins[i]) + np.cos(item / bins[i])\n        else:\n            priorities[i] = np.cos(item / bins[i]) + np.sin(item / bins[i])\n    \n    return priorities\n\n", "score": -2068.8}