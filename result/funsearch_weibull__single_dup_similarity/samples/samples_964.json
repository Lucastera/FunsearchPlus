{"sample_order": 964, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    ratios = item / bins\n    priorities = []\n    \n    for ratio in ratios:\n        if ratio < 0.2:\n            priority = np.sin(ratio) + np.cos(ratio) + np.tan(ratio)\n        elif ratio >= 0.2 and ratio < 0.4:\n            priority = np.sqrt(ratio) + np.log(ratio) + np.exp(ratio)\n        elif ratio >= 0.4 and ratio < 0.6:\n            priority = np.cosh(ratio) - np.sinh(ratio) + np.tanh(ratio)\n        elif ratio >= 0.6 and ratio < 0.8:\n            priority = np.sin(np.pi*ratio) + np.cos(np.pi*ratio) + np.tan(np.pi*ratio)\n        else:\n            priority = np.arcsin(ratio) + np.arccos(ratio) + np.arctan(ratio)\n        \n        priorities.append(priority)\n    \n    return np.array(priorities)\n\n", "score": -2053.8}