{"sample_order": 878, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    ratios = item / bins\n    priorities = []\n\n    for ratio in ratios:\n        if ratio < 0.25:\n            priority = np.log(ratio) + np.sqrt(ratio) + np.sin(ratio)\n        elif ratio >= 0.25 and ratio < 0.5:\n            priority = np.cos(ratio) * np.tan(ratio) - np.arctan(ratio)\n        elif ratio >= 0.5 and ratio < 0.75:\n            priority = np.exp(ratio) * np.cosh(ratio) - np.sinh(ratio)\n        else:\n            priority = np.sqrt(ratio) * np.arcsinh(ratio) + np.cbrt(ratio)\n\n        priorities.append(priority)\n\n    return np.array(priorities)\n\n", "score": -2075.4}