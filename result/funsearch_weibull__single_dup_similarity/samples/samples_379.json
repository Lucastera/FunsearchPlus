{"sample_order": 379, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    ratios = item / bins\n    priorities = []\n\n    for ratio in ratios:\n        if ratio < 0.1:\n            priority = np.sin(5*ratio) * np.cosh(3*ratio) - np.tan(1.5*ratio)\n        elif ratio >= 0.1 and ratio < 0.3:\n            priority = np.tan(2*ratio) + np.exp(1.5*ratio) - np.log(0.5*ratio)\n        elif ratio >= 0.3 and ratio < 0.5:\n            priority = np.cosh(ratio) * np.sin(2*ratio) + np.sqrt(2*ratio)\n        elif ratio >= 0.5 and ratio < 0.7:\n            priority = np.arccos(ratio) + np.arcsin(0.5*ratio) - np.arctan(0.75*ratio)\n        elif ratio >= 0.7 and ratio < 0.9:\n            priority = np.sinh(ratio) * np.cosh(ratio) * np.tanh(ratio)\n        else:\n            priority = np.sin(2*ratio) + np.cos(1.5*ratio) + np.tan(ratio)\n\n        priorities.append(priority)\n\n    return np.array(priorities)\n\n", "score": -2056.2}