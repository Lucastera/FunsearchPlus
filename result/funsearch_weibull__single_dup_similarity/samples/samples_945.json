{"sample_order": 945, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    \n    priorities = []\n    \n    for i in range(len(bins)):\n        bin_capacity = bins[i]\n        ratio = item / bin_capacity\n        \n        if ratio < 0.2:\n            priority = np.log(ratio) + np.sqrt(ratio) + np.cos(ratio)\n        elif ratio >= 0.2 and ratio < 0.5:\n            priority = np.exp(ratio) * np.log1p(ratio) + np.sinh(ratio)\n        elif ratio >= 0.5 and ratio < 0.8:\n            priority = np.cosh(ratio) * np.tanh(ratio) + np.arcsinh(ratio)\n        else:\n            priority = np.arccos(ratio) + np.arctan(ratio) + np.arcsin(ratio)\n        \n        priorities.append(priority)\n    \n    return np.array(priorities)\n\n", "score": -2067.0}