{"sample_order": 192, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    ratios = item / bins\n    priorities = []\n\n    for ratio in ratios:\n        priority = 0\n        if ratio < 0.1:\n            for i in range(1, 6):\n                priority += np.sin(i*ratio)\n        elif ratio >= 0.1 and ratio < 0.3:\n            for i in range(1, 6):\n                priority += np.cos(i*ratio)\n        elif ratio >= 0.3 and ratio < 0.5:\n            for i in range(1, 6):\n                priority += np.tan(i*ratio)\n        elif ratio >= 0.5 and ratio < 0.7:\n            for i in range(1, 6):\n                priority += np.sqrt(i*ratio)\n        elif ratio >= 0.7 and ratio < 0.9:\n            for i in range(1, 6):\n                priority += np.exp(i*ratio)\n        else:\n            priority = np.sum(np.arange(1, 6)*ratio)\n\n        priorities.append(priority)\n\n    return np.array(priorities)\n\n", "score": -2106.4}