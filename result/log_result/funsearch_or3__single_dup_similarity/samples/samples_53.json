{"sample_order": 53, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    priorities = []\n    for idx, bin_capacity in enumerate(bins):\n        if bin_capacity >= item:\n            priority = 1 / bin_capacity\n        else:\n            priority = np.exp((item - bin_capacity) / (2 * bin_capacity))\n        priorities.append(priority)\n    return np.array(priorities)\n\n", "score": null}