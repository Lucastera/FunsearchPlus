{"sample_order": 8, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    \"\"\"Improved version of `priority_v0`.\"\"\"\n    priorities = np.zeros(bins.shape)\n    for i in range(len(bins)):\n        ratio = item / bins[i]\n        if ratio < 0.5:\n            priorities[i] = 1.0\n        elif ratio < 1.0:\n            priorities[i] = 0.5\n        else:\n            priorities[i] = 0.1\n    return priorities\n\n", "score": -245.6}