{"sample_order": 30, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    priorities = np.zeros(len(bins))\n\n    for i in range(len(bins)):\n        if bins[i] == 0:\n            priorities[i] = 0.0\n        elif item <= 0:\n            priorities[i] = np.inf\n        elif bins[i] >= item:\n            priorities[i] = 1.0\n        elif bins[i] > 0 and item > bins[i]/2:\n            priorities[i] = item / bins[i]\n        else:\n            priorities[i] = (item - bins[i]) / item\n        \n        if i % 2 == 0:\n            priorities[i] *= 2\n        else:\n            priorities[i] *= 1.5\n\n    return priorities\n\n", "score": -212.75}