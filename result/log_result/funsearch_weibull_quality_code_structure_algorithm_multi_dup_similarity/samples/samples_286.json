{"sample_order": 286, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    processed_data = []\n    \n    # Preprocess data\n    for item in data:\n        if item < 0:\n            item = 0\n        elif item > 100:\n            item = 100\n        processed_data.append(item)\n    \n    # Perform complex calculations on processed data\n    result = []\n    for i in range(len(processed_data)):\n        if i == 0:\n            result.append(processed_data[i])\n        else:\n            if processed_data[i] > processed_data[i-1]:\n                result.append(processed_data[i] * 2)\n            else:\n                result.append(processed_data[i] + processed_data[i-1])\n    \n    # Post-process results\n    final_result = []\n    for item in result:\n        if item < 50:\n            final_result.append(item / 2)\n        else:\n            final_result.append(item)\n    \n    return final_result\n\n", "score": null}