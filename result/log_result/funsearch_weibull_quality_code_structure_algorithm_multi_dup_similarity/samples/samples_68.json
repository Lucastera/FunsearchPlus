{"sample_order": 68, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    \"\"\"\n    Complex Python function with optimized code structure.\n    \"\"\"\n    \n    # Step 1: Preprocess input data\n    processed_data = preprocess_data(input_data)\n    \n    # Step 2: Perform calculations on processed data\n    result = np.zeros_like(processed_data)\n    for i in range(len(processed_data)):\n        if processed_data[i] % 2 == 0:\n            result[i] = processed_data[i] ** 2\n        else:\n            result[i] = processed_data[i] * 3\n    \n    # Step 3: Post-process the results\n    final_result = post_process(result)\n    \n    return final_result\n\n", "score": null}