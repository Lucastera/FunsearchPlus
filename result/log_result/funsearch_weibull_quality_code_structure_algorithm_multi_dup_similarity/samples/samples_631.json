{"sample_order": 631, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    \"\"\"Complex function with optimized code structure.\"\"\"\n    result = []\n    \n    # Iterate over input data\n    for data_point in input_data:\n        if data_point % 2 == 0:\n            # For even numbers, apply specific operations\n            processed_data = data_point * 2\n        else:\n            # For odd numbers, apply different operations\n            processed_data = data_point + 5\n            \n        # Apply additional logic based on value of processed_data\n        if processed_data > 20:\n            result.append(processed_data / 2)\n        elif processed_data > 10:\n            result.append(processed_data - 5)\n        else:\n            result.append(processed_data)\n    \n    return np.array(result)\n\n", "score": null}