{"sample_order": 53, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    # Initialize result array with zeros\n    result = np.zeros_like(data)\n\n    # Loop through each element in data array\n    for i in range(len(data)):\n        # Check if element is odd\n        if data[i] % 2 != 0:\n            # Square the odd number and add 10\n            result[i] = data[i] ** 2 + 10\n        else:\n            # Check if element is divisible by 3\n            if data[i] % 3 == 0:\n                # Cube the number if divisible by 3\n                result[i] = data[i] ** 3\n            else:\n                # Subtract 5 from even numbers not divisible by 3\n                result[i] = data[i] - 5\n\n    return result\n\n", "score": null}