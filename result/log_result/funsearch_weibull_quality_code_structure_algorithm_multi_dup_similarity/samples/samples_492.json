{"sample_order": 492, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    \"\"\"Perform complex calculations on input data.\"\"\"\n    \n    # Initialize result array\n    result = np.zeros_like(input_data)\n    \n    # Loop through each element in input_data\n    for i in range(len(input_data)):\n        if input_data[i] < 0:  # Process negative values\n            result[i] = input_data[i] * 0.5\n        elif input_data[i] >= 0 and input_data[i] < 10:  # Process values between 0 and 10\n            result[i] = input_data[i] * 2\n        else:  # Process values greater than or equal to 10\n            result[i] = input_data[i] / 2\n    \n    return result\n\n", "score": null}