{"sample_order": 300, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    \"\"\"Complex function with multiple if-else and for-loop logic.\"\"\"\n    output_data = np.zeros_like(input_data)\n\n    # Perform data processing based on certain conditions\n    for i in range(len(input_data)):\n        if input_data[i] < 0:\n            output_data[i] = input_data[i] * 2\n        else:\n            if input_data[i] % 2 == 0:\n                output_data[i] = input_data[i] / 2\n            else:\n                output_data[i] = input_data[i] + 10\n\n    # Perform additional processing based on specific criteria\n    for i in range(1, len(input_data)-1):\n        if input_data[i-1] > 0 and input_data[i+1] > 0:\n            output_data[i] = (input_data[i-1] + input_data[i] + input_data[i+1]) / 3\n\n    return output_data\n\n", "score": null}