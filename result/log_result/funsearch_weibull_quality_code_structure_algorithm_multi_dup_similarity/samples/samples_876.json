{"sample_order": 876, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    # Calculate the sum of each column\n    column_sums = np.sum(matrix, axis=0)\n    \n    # Calculate the product of each row\n    row_products = np.prod(matrix, axis=1)\n    \n    # Create an empty array to store results\n    results = np.zeros_like(column_sums)\n    \n    # Iterate over the columns\n    for i in range(len(column_sums)):\n        if column_sums[i] < 10:\n            results[i] = column_sums[i] * 2\n        elif column_sums[i] < 20:\n            results[i] = column_sums[i] * 1.5\n        else:\n            results[i] = column_sums[i] * 1.2\n    \n    # Iterate over the rows\n    for j in range(len(row_products)):\n        if row_products[j] < 100:\n            results[j] += row_products[j] * 0.5\n        elif row_products[j] < 200:\n            results[j] += row_products[j] * 0.7\n        else:\n            results[j] += row_products[j] * 0.9\n    \n    return results\n\n", "score": null}