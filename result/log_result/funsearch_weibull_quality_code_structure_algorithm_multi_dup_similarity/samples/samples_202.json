{"sample_order": 202, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    # Initialize result array\n    result = np.zeros_like(input_data)\n    \n    # Process input data in a complex manner\n    for i in range(len(input_data)):\n        if input_data[i] % 2 == 0:\n            result[i] = input_data[i] * 2  # Double the value for even numbers\n        else:\n            result[i] = input_data[i] / 2  # Halve the value for odd numbers\n\n    # Further processing based on specific conditions\n    for i in range(len(result)):\n        if result[i] >= 10:\n            result[i] = result[i] - 5  # Subtract 5 from values greater than or equal to 10\n        else:\n            result[i] = result[i] + 5  # Add 5 to values less than 10\n\n    return result\n\n", "score": null}