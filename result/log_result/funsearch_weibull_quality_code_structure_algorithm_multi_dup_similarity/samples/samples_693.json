{"sample_order": 693, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    \"\"\"Performs a complex operation on the input data array.\"\"\"\n\n    # Initialize variables\n    result = np.zeros_like(data)\n    \n    # Iterate over each element in the input array\n    for i in range(len(data)):\n        if data[i] % 2 == 0:\n            # If the element is even, perform operation A\n            result[i] = data[i] * 2\n        else:\n            # If the element is odd, perform operation B\n            result[i] = data[i] + 1\n    \n    # Post-processing step\n    for i in range(1, len(result)):\n        # Add a small increment to each element based on the previous element\n        result[i] += 0.1 * result[i-1]\n    \n    return result\n\n", "score": null}