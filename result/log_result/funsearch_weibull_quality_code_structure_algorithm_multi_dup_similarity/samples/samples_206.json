{"sample_order": 206, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    \"\"\"Complex function that performs multiple operations on input data.\"\"\"\n\n    # Initialize variables\n    result = np.zeros_like(input_data)\n\n    # Perform complex calculations\n    for i in range(len(input_data)):\n        if input_data[i] % 2 == 0:  # Check if number is even\n            result[i] = input_data[i] ** 2  # Square the number\n        else:\n            result[i] = input_data[i] + 10  # Add 10 to the number\n\n        # Check for special cases\n        if input_data[i] == 0:\n            result[i] = 0  # Set result to 0 if input is 0\n        elif input_data[i] < 0:\n            result[i] = -input_data[i]  # Take absolute value if input is negative\n\n    return result\n\n", "score": null}