{"sample_order": 415, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    \"\"\"Perform a complex operation on the input data array.\"\"\"\n    \n    result = np.zeros_like(data)\n    \n    # Perform initial processing on data\n    for i in range(len(data)):\n        if data[i] < 0:\n            result[i] = 0\n        else:\n            result[i] = data[i]\n    \n    # Further processing based on conditions\n    for i in range(len(result)):\n        if result[i] % 2 == 0:\n            result[i] *= 2\n        elif result[i] % 3 == 0:\n            result[i] *= 3\n    \n    # Apply additional transformation based on specific values\n    for i in range(len(result)):\n        if result[i] == 0:\n            result[i] = 1\n        elif result[i] == 5:\n            result[i] = 10\n        elif result[i] == 7:\n            result[i] = 14\n    \n    return result\n\n", "score": null}