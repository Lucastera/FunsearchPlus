{"sample_order": 119, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    \"\"\"Complex function that performs multiple operations on input data.\"\"\"\n    \n    result = np.zeros_like(data)\n    \n    # Perform operation based on value in data array\n    for i in range(len(data)):\n        if data[i] % 2 == 0:\n            result[i] = data[i] * 2\n        elif data[i] % 3 == 0:\n            result[i] = data[i] // 3\n        else:\n            result[i] = data[i]\n    \n    # Filter out negative values in result array\n    result = result[result >= 0]\n    \n    # Sort the result array in descending order\n    result = np.sort(result)[::-1]\n    \n    return result\n\n", "score": null}