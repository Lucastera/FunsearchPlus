{"sample_order": 645, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    \"\"\"Perform a complex operation on input data based on a threshold value.\"\"\"\n    \n    # Initialize result array\n    result = np.zeros_like(input_data)\n    \n    # Loop through each element in input data\n    for i in range(len(input_data)):\n        if input_data[i] < threshold:\n            # Apply condition 1\n            result[i] = input_data[i] * 2\n        elif input_data[i] >= threshold and input_data[i] < 2 * threshold:\n            # Apply condition 2\n            result[i] = input_data[i] ** 2\n        elif input_data[i] >= 2 * threshold:\n            # Apply condition 3\n            result[i] = np.sqrt(input_data[i])\n    \n    return result\n\n", "score": null}