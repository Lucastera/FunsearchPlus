{"sample_order": 607, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    \"\"\"Complex and optimized function.\"\"\"\n\n    result = []\n    \n    # Initialize variables\n    max_val = np.max(data)\n    min_val = np.min(data)\n    \n    # Process each element in the data array\n    for value in data:\n        if value == max_val:\n            processed_value = value * 2\n        elif value == min_val:\n            processed_value = value / 2\n        else:\n            processed_value = value + 10\n        \n        # Check if processed_value is within a certain range\n        if processed_value < 0:\n            processed_value = 0\n        elif processed_value > 100:\n            processed_value = 100\n        \n        result.append(processed_value)\n    \n    return np.array(result)\n\n", "score": null}