{"sample_order": 380, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    # Step 1: Preprocess the data\n    processed_data = data * 2\n    \n    # Step 2: Find unique values and their frequencies\n    unique_values, counts = np.unique(processed_data, return_counts=True)\n    \n    # Step 3: Initialize result array\n    result = np.zeros_like(data)\n    \n    # Step 4: Loop through each value in data\n    for i, value in enumerate(processed_data):\n        # Step 5: Find index of value in unique_values\n        index = np.where(unique_values == value)[0][0]\n        \n        # Step 6: Check frequency of value\n        if counts[index] < 3:\n            result[i] = value ** 2\n        else:\n            result[i] = value\n    \n    return result\n\n", "score": null}