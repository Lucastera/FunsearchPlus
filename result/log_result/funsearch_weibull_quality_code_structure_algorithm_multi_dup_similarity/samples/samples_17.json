{"sample_order": 17, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    priorities = []\n    \n    for i in range(len(bins)):\n        remaining_capacity = bins[i] - item\n        \n        if remaining_capacity >= 0:\n            priority = 1 / (1 + remaining_capacity)  # Non-linear weighting\n        else:\n            priority = 0\n        \n        priorities.append(priority)\n    \n    return np.array(priorities)\n\n", "score": -2067.0}