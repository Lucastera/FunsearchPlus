{"sample_order": 606, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    output_data = []\n\n    for data_point in input_data:\n        result = 0\n        \n        # Perform complex calculations based on data_point\n        if data_point % 2 == 0:\n            result += data_point * 2\n        else:\n            result -= data_point\n        \n        if data_point > 10:\n            result *= 2\n        else:\n            result /= 2\n        \n        # Add more complex logic based on data_point\n        \n        output_data.append(result)\n    \n    return np.array(output_data)\n\n", "score": null}