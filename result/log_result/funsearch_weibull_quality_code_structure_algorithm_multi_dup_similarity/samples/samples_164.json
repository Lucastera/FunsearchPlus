{"sample_order": 164, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    \"\"\"Complex function that processes input data.\"\"\"\n    output_data = []\n\n    # Perform initial processing\n    processed_data = []\n    for item in input_data:\n        processed_item = item ** 2\n\n        # Further processing based on processed item\n        if processed_item % 2 == 0:\n            result = processed_item / 2\n        else:\n            result = processed_item * 2\n\n        processed_data.append(result)\n\n    # Final processing of processed data\n    for idx, item in enumerate(processed_data):\n        if idx % 2 == 0:\n            output = item / 2\n        else:\n            output = item + 10\n\n        output_data.append(output)\n\n    return np.array(output_data)\n\n", "score": null}