{"sample_order": 712, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    \"\"\"Complex function that operates on a numpy array.\"\"\"\n    \n    result = 0.0\n    \n    # Operation 1: Calculate the sum of all elements in the array\n    result += np.sum(data)\n    \n    # Operation 2: Iterate over the array and perform calculations based on element value\n    for i in range(len(data)):\n        if data[i] > 0:\n            result += data[i] ** 2\n        else:\n            result -= data[i]\n    \n    # Operation 3: Check if the array is sorted in ascending order\n    if np.all(np.diff(data) >= 0):\n        result *= 2.0\n    \n    # Operation 4: Perform a final check and update result accordingly\n    if np.max(data) > 10:\n        result = result * np.std(data)\n    else:\n        result = result / np.mean(data)\n    \n    return result\n\n", "score": null}