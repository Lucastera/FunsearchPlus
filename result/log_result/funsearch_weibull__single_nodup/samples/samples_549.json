{"sample_order": 549, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    priorities = np.zeros_like(bins)\n    \n    for index, bin_capacity in enumerate(bins):\n        if item <= bin_capacity:\n            priorities[index] = 1.0\n        else:\n            remaining_capacity = bin_capacity - item\n            if remaining_capacity > 0:\n                priority = 1 / remaining_capacity\n                if priority < 0.3:\n                    priorities[index] = 0.9\n                elif priority >= 0.3 and priority < 0.6:\n                    priorities[index] = 0.7\n                elif priority >= 0.6 and priority < 0.9:\n                    priorities[index] = 0.5\n                else:\n                    if item > bin_capacity * 1.5:\n                        priorities[index] = 0.4\n                    elif item > bin_capacity * 1.2:\n                        priorities[index] = 0.3\n                    else:\n                        priorities[index] = 0.2\n            else:\n                if item > bin_capacity * 1.5:\n                    priorities[index] = 0.1\n                elif item > bin_capacity:\n                    priorities[index] = 0.0\n                else:\n                    priorities[index] = 0.1\n                    \n                if priorities[index] == 0.0:\n                    for i in range(index+1, len(bins)):\n                        if bins[i] >= item:\n                            if bins[i] - item < 0.5:\n                                priorities[i] = 0.8\n                            elif bins[i] - item < 1:\n                                priorities[i] = 0.6\n                            else:\n                                priorities[i] = 0.4\n    \n    return priorities\n\n", "score": -2071.8}