{"sample_order": 602, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    priorities = np.zeros_like(bins)\n    \n    for i in range(len(bins)):\n        if item > bins[i]:\n            priorities[i] = 0\n        else:\n            remaining_space = bins[i] - item\n            utilization_ratio = remaining_space / bins[i]\n            \n            if utilization_ratio < 0.2:\n                priority_score = 1 / (1 + utilization_ratio)\n            elif utilization_ratio >= 0.2 and utilization_ratio < 0.4:\n                priority_score = 0.8 / (1 + utilization_ratio)\n            elif utilization_ratio >= 0.4 and utilization_ratio < 0.7:\n                priority_score = 0.6 / (1 + utilization_ratio)\n            elif utilization_ratio >= 0.7 and utilization_ratio < 0.9:\n                priority_score = 0.4 / (1 + utilization_ratio)\n            else:\n                priority_score = 0.2 / (1 + utilization_ratio)\n                \n            if remaining_space >= 7:\n                priority_score *= 1.3\n            elif remaining_space >= 4:\n                priority_score *= 1.15\n            \n            if bins[i] >= 20:\n                priority_score *= 1.5\n            elif bins[i] >= 12:\n                priority_score *= 1.25\n            elif bins[i] >= 6:\n                priority_score *= 1.1\n                \n            if item < 6:\n                priority_score += 0.3\n            elif item >= 6 and item < 12:\n                priority_score += 0.15\n            elif item >= 12 and item < 20:\n                priority_score += 0.1\n                \n            if remaining_space > 0.6*bins[i]:\n                priority_score += 0.2\n            elif remaining_space <= 0.6*bins[i] and remaining_space > 0.35*bins[i]:\n                priority_score += 0.1\n            \n            if item % 2 == 0:\n                priority_score += 0.1\n            if bins[i] % 2 == 0:\n                priority_score += 0.1\n            \n            priorities[i] = priority_score\n            \n    return priorities\n\n", "score": -2074.6}