{"sample_order": 100, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    ratios = item / bins\n    priorities = np.zeros_like(bins)\n    \n    for i, ratio in enumerate(ratios):\n        if ratio < 0.1:\n            priorities[i] = 1.0 / ratio\n        elif ratio >= 0.1 and ratio < 0.5:\n            priorities[i] = 0.5 / ratio\n        else:\n            priorities[i] = np.log(ratio)\n    \n    return priorities\n\n", "score": -2498.4}