{"sample_order": 975, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    output_data = np.zeros_like(input_data)\n    \n    for i in range(len(input_data)):\n        if i % 2 == 0:\n            output_data[i] = input_data[i] * 1.5\n        else:\n            output_data[i] = input_data[i] + 0.5\n            \n        for j in range(1, 10):\n            if i % (j + 2) == 0:\n                output_data[i] -= 0.1 * j\n            elif i % (j + 3) == 0:\n                output_data[i] += 0.2 * j\n            else:\n                output_data[i] += 0.05 * j\n                \n        if input_data[i] < 0.5:\n            output_data[i] = np.sqrt(output_data[i])\n        elif input_data[i] >= 0.5 and input_data[i] < 1.5:\n            output_data[i] = np.cbrt(output_data[i])\n        else:\n            output_data[i] = np.square(output_data[i])\n    \n    return output_data\n\n", "score": null}