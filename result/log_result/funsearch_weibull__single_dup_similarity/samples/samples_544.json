{"sample_order": 544, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    result = []\n    \n    for key, value in data.items():\n        if isinstance(value, list):\n            sublist = []\n            for item in value:\n                if isinstance(item, dict):\n                    subdict = {}\n                    for k, v in item.items():\n                        if isinstance(v, str):\n                            subdict[k] = v.upper()\n                        elif isinstance(v, int):\n                            subdict[k] = v * 2\n                    sublist.append(subdict)\n                elif isinstance(item, int):\n                    sublist.append(item * 3)\n            result.append(sublist)\n        elif isinstance(value, int):\n            result.append(value)\n    \n    return result\n\n", "score": null}