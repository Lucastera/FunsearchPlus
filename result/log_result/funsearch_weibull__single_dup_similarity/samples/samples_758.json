{"sample_order": 758, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    \"\"\"Even more improved version of `priority_v1`.\"\"\"\n    priorities = np.zeros(len(bins))\n\n    for i in range(len(bins)):\n        if item > bins[i]:\n            priorities[i] = 0\n        elif item == bins[i]:\n            priorities[i] = 5\n        else:\n            diff = bins[i] - item\n            if diff > 10:\n                priorities[i] = 8\n            elif diff > 5:\n                priorities[i] = 6\n            elif diff >= 1:\n                priorities[i] = 3\n            else:\n                priorities[i] = 1\n\n    return priorities\n\n", "score": -2323.6}