{"sample_order": 938, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    ratios = item / bins\n    priorities = []\n\n    for ratio in ratios:\n        if ratio < 0.2:\n            priority = np.square(ratio) + np.sqrt(np.sin(ratio)) - np.log(np.tanh(ratio))\n        elif ratio >= 0.2 and ratio < 0.4:\n            priority = np.tan(np.cosh(ratio)) * np.arcsin(np.cos(ratio)) + np.sinh(np.tan(ratio))\n        elif ratio >= 0.4 and ratio < 0.6:\n            priority = np.exp(np.square(ratio)) * np.log(np.cosh(ratio)) + np.sqrt(np.tanh(ratio))\n        elif ratio >= 0.6 and ratio < 0.8:\n            priority = np.cosh(np.arctan(ratio)) * np.sinh(np.arcsin(ratio)) - np.tanh(np.cos(ratio))\n        else:\n            priority = np.square(np.cbrt(ratio)) + np.sqrt(np.exp(ratio)) - np.log(np.sinh(ratio))\n\n        priorities.append(priority)\n\n    return np.array(priorities)\n\n", "score": -2153.8}