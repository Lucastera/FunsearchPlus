{"sample_order": 733, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    result = []\n\n    for row in matrix:\n        row_sum = np.sum(row)\n        if row_sum < 10:\n            new_row = [elem * 2 for elem in row]\n        elif row_sum >= 10 and row_sum < 20:\n            new_row = [elem ** 2 for elem in row]\n        elif row_sum >= 20 and row_sum < 30:\n            new_row = [elem + 10 for elem in row]\n        else:\n            new_row = [elem - 5 for elem in row]\n\n        result.append(new_row)\n\n    return np.array(result)\n\n", "score": null}