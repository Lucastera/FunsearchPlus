{"sample_order": 2, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    ratios = item / bins\n    priorities = np.zeros(len(bins))\n    \n    for i in range(len(bins)):\n        if ratios[i] >= 0.8:\n            priorities[i] = 3\n        elif ratios[i] >= 0.5:\n            priorities[i] = 2\n        else:\n            priorities[i] = 1\n    \n    return priorities\n\n", "score": -2069.0}