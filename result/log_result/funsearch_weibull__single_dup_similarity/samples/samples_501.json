{"sample_order": 501, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    rolling_avg = np.zeros(len(data) - window_size + 1)\n    \n    for i in range(len(data) - window_size + 1):\n        window_sum = np.sum(data[i:i+window_size])\n        rolling_avg[i] = window_sum / window_size\n        \n        if i > 0:\n            rolling_avg[i] = 0.6 * rolling_avg[i] + 0.4 * rolling_avg[i - 1]\n        \n        if rolling_avg[i] < 0:\n            rolling_avg[i] = np.abs(rolling_avg[i])\n    \n    return rolling_avg\n\n", "score": null}