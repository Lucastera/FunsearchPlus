{"sample_order": 518, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    num_points = len(coordinates)\n    distance_matrix = np.zeros((num_points, num_points))\n\n    for i in range(num_points):\n        for j in range(num_points):\n            if i == j:\n                distance_matrix[i, j] = 0\n            else:\n                x1, y1 = coordinates[i]\n                x2, y2 = coordinates[j]\n                distance = np.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2)\n                distance_matrix[i, j] = distance\n\n    return distance_matrix\n\n", "score": null}