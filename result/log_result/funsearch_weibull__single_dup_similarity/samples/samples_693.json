{"sample_order": 693, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    priorities = np.zeros_like(bins)\n    for i in range(len(bins)):\n        if item > bins[i]:\n            priorities[i] = item - bins[i]\n        else:\n            priorities[i] = bins[i] - item\n        \n        if item < 0.2:\n            priorities[i] *= 2.0\n        elif item >= 0.2 and item < 0.5:\n            priorities[i] *= 1.5\n        else:\n            priorities[i] *= 1.0\n        \n        if i % 3 == 0:\n            priorities[i] += 3\n        elif i % 3 == 1:\n            priorities[i] -= 1\n        else:\n            priorities[i] += 2\n    \n    return priorities\n\n", "score": -4999.2}