{"sample_order": 403, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    \"\"\"More advanced version of `priority_v1`.\"\"\"\n    ratios = item / bins\n    priorities = []\n\n    for ratio in ratios:\n        if ratio < 0.2:\n            priority = np.cos(5*ratio) + np.sin(3*ratio) / np.tan(1.2*ratio)\n        else:\n            for i in range(1, int(ratio*10)+1):\n                if i % 2 == 0:\n                    priority += np.cos(i*ratio) - np.sin(i*ratio) + np.tan(i*ratio)\n                else:\n                    priority += np.sin(i*ratio) - np.cos(i*ratio) + np.tanh(i*ratio)\n\n        priorities.append(priority)\n\n    return np.array(priorities)\n\n", "score": -2164.8}