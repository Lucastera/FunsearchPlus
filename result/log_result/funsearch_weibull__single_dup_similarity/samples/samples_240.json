{"sample_order": 240, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    result = []\n    \n    for key, value in input_data.items():\n        if isinstance(value, list):\n            new_list = []\n            for item in value:\n                if isinstance(item, int):\n                    new_list.append(item ** 2)\n                elif isinstance(item, float):\n                    new_list.append(item * 2)\n                else:\n                    new_list.append(item)\n            result.append(new_list)\n        elif isinstance(value, dict):\n            new_dict = {}\n            for k, v in value.items():\n                if isinstance(v, str):\n                    new_dict[k] = v.upper()\n                elif isinstance(v, bool):\n                    new_dict[k] = not v\n                else:\n                    new_dict[k] = v\n            result.append(new_dict)\n        else:\n            result.append(value)\n    \n    return result\n\n", "score": null}