{"sample_order": 789, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    ratios = item / bins\n    priorities = []\n\n    for ratio in ratios:\n        if ratio < 0.1:\n            priority = (3*ratio) ** 2 + np.sqrt(np.log(ratio)) - np.cbrt(ratio)\n        elif ratio >= 0.1 and ratio < 0.5:\n            priority = np.cos(5*ratio) * np.tan(3*ratio) + np.sin(7*ratio)\n        elif ratio >= 0.5 and ratio < 0.8:\n            priority = np.sinh(ratio) * np.cosh(ratio) + np.arctan(ratio) + np.cosh(ratio)\n        else:\n            priority = np.tan(ratio) * np.cosh(ratio) - np.tanh(ratio) + np.arccos(ratio)\n\n        priorities.append(priority)\n\n    return np.array(priorities)\n\n", "score": -2159.4}