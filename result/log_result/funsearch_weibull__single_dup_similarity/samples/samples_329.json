{"sample_order": 329, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    ratios = item / bins\n    priorities = np.zeros(len(bins))\n\n    for i in range(len(bins)):\n        if ratios[i] > 0.9:\n            if item > 15 and bins[i] > 10:\n                priorities[i] = 8\n            elif item > 10 and bins[i] > 8:\n                priorities[i] = 7\n            else:\n                priorities[i] = 6\n        elif ratios[i] >= 0.8:\n            if item > 8 and bins[i] > 5:\n                priorities[i] = 6\n            elif item > 5 and bins[i] > 4:\n                priorities[i] = 5\n            else:\n                priorities[i] = 4\n        elif ratios[i] >= 0.6:\n            if item > 3 and bins[i] > 2:\n                priorities[i] = 4\n            elif item > 2 and bins[i] > 1:\n                priorities[i] = 3\n            else:\n                priorities[i] = 2\n        elif ratios[i] >= 0.4:\n            if item > 1 and bins[i] > 1:\n                priorities[i] = 3\n            else:\n                priorities[i] = 2\n        else:\n            if bins[i] >= 1:\n                priorities[i] = 2\n            else:\n                priorities[i] = 1\n\n    return priorities\n\n", "score": -2067.8}