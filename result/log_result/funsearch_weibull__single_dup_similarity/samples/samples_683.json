{"sample_order": 683, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    result = []\n\n    for row in data:\n        max_val = np.max(row)\n        min_val = np.min(row)\n        avg = np.mean(row)\n        \n        if max_val > 0 and min_val < 0:\n            result.append(np.sum(row) + np.prod(row))\n        elif max_val > 0 and min_val > 0:\n            result.append(np.sum(np.sqrt(row)) + np.prod(np.square(row)))\n        elif max_val < 0 and min_val < 0:\n            result.append(np.sum(np.cbrt(row)) + np.prod(np.abs(row)))\n        else:\n            result.append(np.sum(np.exp(row)) + np.prod(np.log(np.abs(row))))\n    \n    return np.array(result)\n\n", "score": null}