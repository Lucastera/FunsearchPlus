{"sample_order": 40, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    output_array = np.zeros_like(input_array)  # Initialize output array\n\n    for i in range(len(input_array)):\n        if input_array[i] % 2 == 0:  # Check if the number is even\n            output_array[i] = input_array[i] * 2  # Double the even number\n        else:\n            if i > 0:\n                output_array[i] = input_array[i] + input_array[i-1]  # Sum with previous element if not the first element\n            else:\n                output_array[i] = input_array[i]  # Keep the number as is if it's the first element\n    \n    return output_array\n\n", "score": null}