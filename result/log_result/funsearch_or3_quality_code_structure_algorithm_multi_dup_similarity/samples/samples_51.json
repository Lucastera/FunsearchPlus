{"sample_order": 51, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    ratios = item / bins\n    log_ratios = np.log(ratios)\n    \n    priorities = np.zeros(len(bins))\n    total_capacity = np.sum(bins)\n    for i in range(len(bins)):\n        remaining_capacity = total_capacity - bins[i]\n        priorities[i] = -log_ratios[i] * (remaining_capacity + 1)\n    \n    return priorities\n\n", "score": -500.0}