{"sample_order": 7, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    ratios = item / bins\n    log_ratios = np.log(ratios)\n    \n    n = len(bins)\n    priorities = np.zeros(n)\n    \n    for i in range(n):\n        if bins[i] == 0:\n            priorities[i] = np.inf\n        else:\n            priorities[i] = -log_ratios[i] + np.sum(np.log(item / (bins[:i] + bins[i+1:])))\n    \n    return priorities\n\n", "score": null}