{"sample_order": 121, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    \"\"\"\n    More complex Python function that performs a series of operations on the input data.\n    \"\"\"\n\n    # Initialize an empty result array\n    result = np.zeros_like(data)\n    \n    # Loop through each element in the data array\n    for i in range(len(data)):\n        # Check if the element is less than the target\n        if data[i] < target:\n            # Update the result with the element squared\n            result[i] = data[i] ** 2\n        # Check if the element is greater than the target\n        elif data[i] > target:\n            # Update the result with the element cubed\n            result[i] = data[i] ** 3\n        else:\n            # Update the result with the element itself\n            result[i] = data[i]\n    \n    return result\n\n", "score": null}