{"sample_order": 994, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    # Check if input data is empty\n    if len(input_data) == 0:\n        raise ValueError(\"Input data must not be empty.\")\n    \n    result = np.zeros_like(input_data)\n    \n    # Perform complex calculations based on input data\n    for idx, val in enumerate(input_data):\n        if val < 0:\n            result[idx] = 0\n        elif val % 2 == 0:\n            result[idx] = val * 2\n        elif val % 3 == 0:\n            result[idx] = val / 3\n        else:\n            result[idx] = val + 1\n    \n    return result\n\n", "score": null}