{"sample_order": 998, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    \"\"\"Complex function that processes input data.\"\"\"\n\n    result = np.zeros_like(data)\n    \n    # Iterate over each element in the data\n    for i in range(len(data)):\n        value = data[i]\n        \n        # Check if value is odd\n        if value % 2 != 0:\n            # Compute a new value based on some complex logic\n            new_value = value * 2 + 3\n            \n            # Update result array with the new value\n            result[i] = new_value\n        else:\n            # Compute a different new value based on some other complex logic\n            new_value = value ** 2 + 1\n            \n            # Update result array with the different new value\n            result[i] = new_value\n    \n    return result\n\n", "score": null}