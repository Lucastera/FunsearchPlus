{"sample_order": 469, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    \"\"\"This function performs a complex operation on the input data.\"\"\"\n    \n    result = np.zeros_like(data)\n    \n    # Perform some initial processing on the data\n    processed_data = data * 2\n    \n    # Iterate over the processed data\n    for i in range(len(processed_data)):\n        if processed_data[i] < 0:\n            result[i] = processed_data[i] / 2\n        elif processed_data[i] >= 0 and processed_data[i] < 50:\n            result[i] = processed_data[i] * 1.5\n        else:\n            result[i] = processed_data[i] + 100\n    \n    return result\n\n", "score": null}