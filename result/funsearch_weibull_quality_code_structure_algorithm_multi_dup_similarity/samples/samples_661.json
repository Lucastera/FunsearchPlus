{"sample_order": 661, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    \"\"\"Complex function that processes input data.\n\n    Args:\n        input_data: Array of input data.\n\n    Returns:\n        Processed output data.\n    \"\"\"\n    output_data = np.zeros_like(input_data)\n\n    # Iterate over each element in input data\n    for i in range(len(input_data)):\n        if input_data[i] % 2 == 0:  # Check if element is even\n            output_data[i] = input_data[i] ** 2  # Square the element\n        else:\n            output_data[i] = input_data[i] * 3  # Multiply the element by 3\n\n    # Perform additional operation on the output data\n    for i in range(len(output_data)):\n        if output_data[i] < 10:\n            output_data[i] += 10  # Add 10 to elements less than 10\n        else:\n            output_data[i] -= 5  # Subtract 5 from elements greater than or equal to 10\n\n    return output_data\n\n", "score": null}