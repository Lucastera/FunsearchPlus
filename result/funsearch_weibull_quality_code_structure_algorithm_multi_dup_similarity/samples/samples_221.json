{"sample_order": 221, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    \"\"\"\n    Perform a series of complex operations on the input data.\n\n    Args:\n        data: Input numpy array for processing.\n\n    Returns:\n        Processed numpy array.\n    \"\"\"\n    if len(data) == 0:\n        raise ValueError(\"Input data array must not be empty.\")\n    \n    result = np.zeros_like(data)\n    \n    # Perform multiple operations on the data\n    for i in range(len(data)):\n        if data[i] % 2 == 0:\n            result[i] = data[i] * 2\n        else:\n            result[i] = data[i] // 2\n    \n    # Apply further processing based on certain conditions\n    if np.max(data) > 100:\n        result *= 1.5\n    else:\n        result += 10\n    \n    return result\n\n", "score": null}