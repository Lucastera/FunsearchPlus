{"sample_order": 267, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    \"\"\"Perform complex operations on input data.\"\"\"\n    \n    result = []\n    \n    for key, value in input_data.items():\n        if isinstance(value, list):\n            total = sum(value)\n            if total > 100:\n                result.append((key, 'high total'))\n            else:\n                result.append((key, 'low total'))\n        elif isinstance(value, dict):\n            sub_result = []\n            for k, v in value.items():\n                if v % 2 == 0:\n                    sub_result.append((k, 'even'))\n                else:\n                    sub_result.append((k, 'odd'))\n            result.append((key, sub_result))\n        else:\n            if value > 50:\n                result.append((key, 'above 50'))\n            else:\n                result.append((key, 'below 50'))\n    \n    return result\n\n", "score": null}