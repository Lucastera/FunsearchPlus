{"sample_order": 615, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    \"\"\"Perform a complex operation on a matrix.\"\"\"\n    rows, cols = matrix.shape\n    result = np.zeros((rows, cols))\n\n    for i in range(rows):\n        for j in range(cols):\n            if matrix[i, j] < 0:\n                result[i, j] = -matrix[i, j]\n            elif matrix[i, j] == 0:\n                result[i, j] = 0\n            else:\n                result[i, j] = matrix[i, j] ** 2 + 1\n    \n    return result\n\n", "score": null}