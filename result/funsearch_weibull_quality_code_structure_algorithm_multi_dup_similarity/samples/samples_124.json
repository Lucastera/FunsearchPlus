{"sample_order": 124, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    rows, cols = matrix.shape\n    result = np.zeros((rows, cols))\n    \n    # Perform complex calculations on each element of the matrix\n    for i in range(rows):\n        for j in range(cols):\n            if i % 2 == 0 and j % 2 == 0:\n                result[i, j] = matrix[i, j] * 2\n            elif i % 2 != 0 and j % 2 != 0:\n                result[i, j] = matrix[i, j] * 3\n            elif i % 2 == 0 or j % 2 == 0:\n                result[i, j] = matrix[i, j] + 5\n            else:\n                result[i, j] = matrix[i, j]\n    \n    return result\n\n", "score": null}