{"sample_order": 208, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    result = np.zeros_like(data)\n    \n    # Iterate through each element in the data array\n    for i in range(len(data)):\n        if data[i] % 2 == 0:  # Check if the element is even\n            result[i] = data[i] * 2  # Double the value if even\n        else:\n            result[i] = data[i]  # Keep the value as it is if odd\n    \n    # Another loop for further processing\n    for i in range(1, len(result)):\n        if result[i] > result[i - 1]:  # Check if current element is greater than previous element\n            result[i] += result[i - 1]  # Add previous element to current element\n            \n    return result\n\n", "score": null}