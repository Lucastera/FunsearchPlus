{"sample_order": 424, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    # Check if input_data is not empty\n    if len(input_data) == 0:\n        raise ValueError(\"Input data must not be empty.\")\n    \n    # Initialize result array\n    result = np.zeros_like(input_data)\n    \n    # Loop through input_data and apply complex logic\n    for i in range(len(input_data)):\n        if input_data[i] < 0:\n            result[i] = -1\n        elif input_data[i] == 0:\n            result[i] = 0\n        else:\n            # Calculate new value based on input_data value\n            temp = input_data[i] ** 2 + 5 * input_data[i] - 7\n            \n            # Apply additional conditions\n            if temp % 2 == 0:\n                result[i] = temp / 2\n            else:\n                result[i] = (temp + 1) / 2\n    \n    return result\n\n", "score": null}