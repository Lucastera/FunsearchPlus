{"sample_order": 361, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    \"\"\"Performs a complex operation on input data.\"\"\"\n    output_data = np.zeros_like(input_data)\n    \n    for i in range(len(input_data)):\n        if input_data[i] % 2 == 0:  # Check if number is even\n            output_data[i] = input_data[i] * 2\n        else:\n            output_data[i] = input_data[i] * 3 + 1\n            \n        if input_data[i] > 10:  # Check if number is greater than 10\n            output_data[i] -= 5\n        else:\n            output_data[i] += 5\n            \n    return output_data\n\n", "score": null}