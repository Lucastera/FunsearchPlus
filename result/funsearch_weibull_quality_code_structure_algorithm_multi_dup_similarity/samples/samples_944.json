{"sample_order": 944, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    n = len(data)\n    \n    # Step 1: Perform some initial processing\n    processed_data = np.zeros(n)\n    for i in range(n):\n        processed_data[i] = data[i] * 2 + 5\n        \n    # Step 2: Apply a custom filter\n    filtered_data = np.zeros(n)\n    for i in range(n):\n        if processed_data[i] > 10:\n            filtered_data[i] = processed_data[i]\n    \n    # Step 3: Perform final transformation\n    final_data = np.zeros(n)\n    for i in range(n):\n        if i % 2 == 0:\n            final_data[i] = filtered_data[i] - 3\n        else:\n            final_data[i] = filtered_data[i] + 3\n        \n    return final_data\n\n", "score": null}