{"sample_order": 405, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    result = np.zeros_like(data)  # Initialize result array\n\n    for i in range(len(data)):\n        if data[i] == target:\n            result[i] = 100  # 100 is the highest priority for exact match\n        else:\n            if data[i] % target == 0:\n                result[i] = 50  # Medium priority for divisible numbers\n            elif data[i] % 2 == 0:\n                result[i] = 20  # Lower priority for even numbers\n            else:\n                result[i] = 10  # Lowest priority for odd numbers\n\n    return result\n\n", "score": null}