{"sample_order": 861, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    # Preprocess input data\n    processed_data = input_data * 2\n\n    # Initialize result array\n    result = np.zeros_like(processed_data)\n\n    # Apply complex logic\n    for i, val in enumerate(processed_data):\n        if val < 0:\n            result[i] = 0\n        elif val < 10:\n            result[i] = val * 2\n        else:\n            result[i] = val - 10\n\n    # Postprocess result\n    final_result = result + 5\n\n    return final_result\n\n", "score": null}