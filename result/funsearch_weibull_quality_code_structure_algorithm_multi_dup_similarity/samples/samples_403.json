{"sample_order": 403, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    result = np.zeros_like(data)  # Initialize result array\n\n    for i in range(len(data)):\n        if data[i] == 0:\n            result[i] = np.nan  # Handle zero value in data array\n        else:\n            temp = data[i] + target  # Temporary variable with data value plus target\n\n            if temp < 0:\n                result[i] = np.abs(temp)  # Absolute value of negative temp\n            elif temp > 100:\n                result[i] = temp * 2  # Double the temp value if greater than 100\n            else:\n                result[i] = (temp - data[i]) + (target / data[i])  # Complex calculation based on temp and data value\n\n    return result\n\n", "score": null}