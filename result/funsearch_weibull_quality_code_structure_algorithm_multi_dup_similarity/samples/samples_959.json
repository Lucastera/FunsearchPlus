{"sample_order": 959, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    \"\"\"Complex function to process input array.\"\"\"\n    result = np.zeros_like(arr)\n    \n    # Process array elements based on conditions\n    for i in range(len(arr)):\n        if arr[i] < 0:\n            result[i] = 0\n        elif arr[i] % 2 == 0:\n            result[i] = arr[i] * 2\n        else:\n            result[i] = arr[i] // 2\n            \n        # Additional processing based on result value\n        if result[i] == 0:\n            result[i] = arr[i] + 10\n        elif result[i] < 0:\n            result[i] = abs(result[i])\n    \n    return result\n\n", "score": null}