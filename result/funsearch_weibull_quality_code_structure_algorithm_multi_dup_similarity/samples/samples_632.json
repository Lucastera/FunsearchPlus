{"sample_order": 632, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    # Calculate sum of all elements in the data\n    total_sum = np.sum(data)\n    \n    # Initialize result variable\n    result = 0\n    \n    # Check if target is present in the data\n    if target in data:\n        result = target * 2\n    else:\n        # Find the element closest to the target\n        closest_element = data[np.argmin(np.abs(data - target))]\n        \n        # Calculate the difference between target and closest element\n        diff = abs(target - closest_element)\n        \n        if diff > total_sum / len(data):\n            # If difference is greater than average element value, adjust result\n            result = closest_element * 1.5\n        else:\n            # Otherwise, multiply closest element with the average element value\n            result = closest_element * (total_sum / len(data))\n    \n    return result\n\n", "score": null}