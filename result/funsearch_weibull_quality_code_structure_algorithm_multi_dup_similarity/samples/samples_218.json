{"sample_order": 218, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    \"\"\"Perform complex operations on input data.\"\"\"\n\n    result = np.zeros_like(data)\n\n    # Perform complex calculations based on input data\n    for i in range(len(data)):\n        if data[i] > 0:\n            result[i] = data[i] ** 2\n        else:\n            result[i] = data[i] / 2\n\n    # Apply additional operations to the result\n    for i in range(len(result)):\n        if result[i] % 2 == 0:\n            result[i] = result[i] * 3\n        else:\n            result[i] = result[i] + 5\n\n    return result\n\n", "score": null}