{"sample_order": 539, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    \n    result = np.zeros_like(input_data)\n    \n    for i in range(len(input_data)):\n        if input_data[i] % 2 == 0:  # Check if number is even\n            result[i] = input_data[i] * 2  # Double the number for even values\n        else:\n            result[i] = input_data[i] + 1  # Increment by 1 for odd values\n            \n        if i > 0 and input_data[i] > input_data[i - 1]:\n            result[i] *= 1.5  # Increase result by 50% if current value is greater than previous\n            \n        if i < len(input_data) - 1:\n            # Check if the difference between consecutive elements is within a range\n            diff = abs(input_data[i+1] - input_data[i])\n            if diff < 5:\n                result[i] += diff  # Add the difference if within range\n        \n    return result\n\n", "score": null}